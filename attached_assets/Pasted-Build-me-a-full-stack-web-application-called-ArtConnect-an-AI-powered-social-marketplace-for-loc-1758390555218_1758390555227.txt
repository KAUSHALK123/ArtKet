Build me a full-stack web application called "ArtConnect" — an AI-powered social marketplace for local artisans, inspired by Instagram + Etsy.

Core requirements:
1. Authentication System:
   - Users can sign up and log in as either "Artisan" or "Buyer."
   - Store accounts in a database with profile info.
   - Use Flask (Python) backend with SQLite for simplicity.

2. Artisan Profiles:
   - Each artisan has a profile page with:
     • Name, bio, region, type of craft
     • Story/Background section
     • Portfolio of products (images with descriptions)
   - Buyers can follow artisans and see updates.

3. Feed System (Instagram-like):
   - A scrolling feed of artisan posts (images, captions, hashtags).
   - Posts are stored in the database and linked to artisan accounts.
   - Buyers can like and comment on posts.

4. AI Storytelling Assistant:
   - When artisans upload an image of their craft:
     • AI should suggest a caption (engaging, storytelling style).
     • AI should suggest hashtags relevant to craft type.
     • AI should generate a longer story (background, cultural value).
   - Use OpenAI API or Gemini API integration for this.

5. Marketplace Features:
   - Artisans can list products for sale with:
     • Image, price, title, description
     • Auto-generated product description by AI (optional)
   - Buyers can add products to cart or wishlist (skip payment gateway for now).

6. Discovery & Search:
   - Buyers can search artisans by craft type, location, or keywords.
   - AI recommends similar artisans or trending items.

7. Community Interaction:
   - Buyers can like, comment, and follow artisans.
   - Artisans get notifications for new followers, comments, likes.

8. Database Design (SQLite):
   - Users table (id, role, username, password hash, bio, region, craft_type)
   - Posts table (id, artisan_id, image_url, caption, hashtags, story, timestamp)
   - Products table (id, artisan_id, title, description, price, image_url)
   - Likes/Comments table
   - Followers table
   - Wishlist/Cart table

9. Frontend:
   - Use HTML/CSS/JavaScript (React if possible).
   - Clean, minimal UI similar to Instagram:
     • Navigation bar (Home, Marketplace, Profile, Cart)
     • Feed layout with image cards
     • Artisan profile pages
   - Responsive design for both mobile & desktop.

10. Extras (optional if time allows):
   - AI image enhancer (auto-fix brightness of uploaded images).
   - Multilingual captions (translate artisan stories into English and regional languages).
   - Recommendation system for personalized buyer feed.

Deliverables:
- Fully working Flask app with SQLite database.
- API endpoints for login, posting, commenting, liking, following, and product listing.
- Frontend templates for feed, artisan profile, product page, and cart.
- AI integration functions for caption/description/story generation.
- Deployable version running on Replit.
